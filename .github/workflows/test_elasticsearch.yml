name: Test Elasticsearch 

on: push

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    runs-on: ubuntu-latest

    env:
      ELASTICSEARCH_VERSION:
      ELASTICSEARCH_PLUGINS:
      LOCAL_EMBEDDING_URL: http://localhost:7997
      LOCAL_RERANK_URL: http://localhost:7998
      LOCAL_LLM_URL: http://localhost:7999
      OLLAMA_MODEL: tinyllama

    strategy:
      fail-fast: true
      matrix:
        php: ['8.1', 
        # '8.2', '8.3', '8.4'
        ]
        elasticsearch_version: ['9.1.3']
        stability: [prefer-stable]
        include:
          - php: '8.1'
            flags: "--ignore-platform-req=php"
            stability: prefer-stable

    services:
      es:
        image: docker.elastic.co/elasticsearch/elasticsearch:${{ matrix.elasticsearch_version }}
        ports:
        - 9200:9200
        options: -e="discovery.type=single-node" -e="xpack.security.enabled=false" --health-cmd="curl http://localhost:9200/_cluster/health" --health-interval=10s --health-timeout=5s --health-retries=10
        env:
          ELASTICSEARCH_PLUGINS: "elastiknn"

    name: PHP ${{ matrix.php }} - Elasticsearch ${{ matrix.elasticsearch_version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Start Embeddings Service
        run: |
          docker run -d --name embeddings \
            -p 7997:7997 \
            -e MODEL_ID=BAAI/bge-small-en-v1.5 \
            michaelf34/infinity:latest \
            v2 --model-id BAAI/bge-small-en-v1.5 --port 7997

      - name: Start Reranker Service
        run: |
          docker run -d --name reranker \
            -p 7998:7998 \
            -e MODEL_ID=cross-encoder/ms-marco-MiniLM-L-6-v2 \
            michaelf34/infinity:latest \
            v2 --model-id cross-encoder/ms-marco-MiniLM-L-6-v2 --port 7998

      - name: Start LLM Service
        run: |
          docker run -d --name llm \
            -p 7999:11434 \
            -v ollama:/root/.ollama \
            ollama/ollama:latest

          # Wait for Ollama to start
          sleep 5

          # Pull tinyllama model
          docker exec llm ollama pull tinyllama

          echo "LLM service is ready with tinyllama model!"

      - name: Wait for AI Services to Start
        run: |
          echo "Waiting for embeddings service..."
          until curl -f http://localhost:7997/health 2>/dev/null; do
            echo "Waiting for embeddings..."
            sleep 5
          done
          echo "Embeddings service is ready!"

          echo "Waiting for reranker service..."
          until curl -f http://localhost:7998/health 2>/dev/null; do
            echo "Waiting for reranker..."
            sleep 5
          done
          echo "Reranker service is ready!"

      - name: Set Elasticsearch Version as GitHub Action ENV Vars
        run: |
          set -e 
          if [[ "${{ matrix.elasticsearch_version }}" == 7* ]]; then
            echo "ELASTICSEARCH_VERSION=7.x" >> $GITHUB_ENV
            echo "ELASTICSEARCH_PLUGINS=elastiknn,elasticsearch-skroutz-greekstemmer,elasticsearch-analysis-greeklish" >> $GITHUB_ENV
          elif [[ "${{ matrix.elasticsearch_version }}" == 8* ]]; then
            echo "ELASTICSEARCH_VERSION=8.x" >> $GITHUB_ENV
            echo "ELASTICSEARCH_PLUGINS=elastiknn" >> $GITHUB_ENV
          fi

      - name: Wait for Elasticsearch to Start
        run: |
          echo "Waiting for Elasticsearch to start..."
          until curl -s http://localhost:9200 | grep "tagline"; do
            sleep 5
          done
          echo "Elasticsearch is ready!"

      - name: Create .env file
        run: touch .env

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: curl, libxml, mbstring, zip, pcntl, gd,
          tools: composer:v2
          coverage: xdebug

      - name: Install dependencies
        uses: nick-invision/retry@v1
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: composer update --${{ matrix.stability }} --prefer-dist --no-interaction --no-progress ${{ matrix.flags }}

      - name: Tests
        # continue-on-error: ${{ matrix.elasticsearch_version < 9 }}
        run: vendor/bin/phpunit -c phpunit.xml

      - uses: codecov/codecov-action@v3
        with:
          files: coverage.xml

      # - name: Static analysis
      #   run: vendor/bin/phpstan analyse --memory-limit=-1
