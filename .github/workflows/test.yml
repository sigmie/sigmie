name: Tests

on: push

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php: ['8.1']
        stability: [prefer-stable]
        search-engine:
          - name: elasticsearch
            version: '9.1.3'
            image: docker.elastic.co/elasticsearch/elasticsearch
            port: 9200
            auth: false
            health_check: 'curl http://localhost:9200/_cluster/health'
            plugins: 'elastiknn'
          - name: opensearch
            version: '3.2.0'
            image: opensearchproject/opensearch
            port: 9200
            auth: true
            auth_user: admin
            auth_pass: 'Koala$193tree'
            health_check: 'curl -k -u admin:Koala$193tree https://localhost:9200/_cluster/health'
            plugins: ''
        include:
          - php: '8.1'
            flags: "--ignore-platform-req=php"
            stability: prefer-stable

    name: PHP ${{ matrix.php }} - ${{ matrix.search-engine.name }} ${{ matrix.search-engine.version }}

    services:
      search:
        image: ${{ matrix.search-engine.image }}:${{ matrix.search-engine.version }}
        ports:
          - 9200:9200
        options: >-
          -e="discovery.type=single-node"
          ${{ matrix.search-engine.auth && format('-e="OPENSEARCH_INITIAL_ADMIN_PASSWORD={0}"', matrix.search-engine.auth_pass) || '-e="xpack.security.enabled=false"' }}
          --health-cmd="${{ matrix.search-engine.health_check }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    env:
      SEARCH_ENGINE: ${{ matrix.search-engine.name }}
      LOCAL_EMBEDDING_URL: http://localhost:7997
      LOCAL_RERANK_URL: http://localhost:7998
      LOCAL_LLM_URL: http://localhost:7999
      OLLAMA_MODEL: tinyllama

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Start Embeddings Service
        run: |
          docker run -d --name embeddings \
            -p 7997:7997 \
            -e MODEL_ID=BAAI/bge-small-en-v1.5 \
            michaelf34/infinity:latest \
            v2 --model-id BAAI/bge-small-en-v1.5 --port 7997

      - name: Start Reranker Service
        run: |
          docker run -d --name reranker \
            -p 7998:7998 \
            -e MODEL_ID=cross-encoder/ms-marco-MiniLM-L-6-v2 \
            michaelf34/infinity:latest \
            v2 --model-id cross-encoder/ms-marco-MiniLM-L-6-v2 --port 7998

      - name: Start LLM Service (Elasticsearch only)
        if: matrix.search-engine.name == 'elasticsearch'
        run: |
          docker run -d --name llm \
            -p 7999:11434 \
            -v ollama:/root/.ollama \
            ollama/ollama:latest

          # Wait for Ollama to start
          sleep 5

          # Pull tinyllama model
          docker exec llm ollama pull tinyllama

          echo "LLM service is ready with tinyllama model!"

      - name: Wait for AI Services
        run: |
          echo "Waiting for embeddings service..."
          until curl -f http://localhost:7997/health 2>/dev/null; do
            echo "Waiting for embeddings..."
            sleep 5
          done
          echo "Embeddings service is ready!"

          echo "Waiting for reranker service..."
          until curl -f http://localhost:7998/health 2>/dev/null; do
            echo "Waiting for reranker..."
            sleep 5
          done
          echo "Reranker service is ready!"

      - name: Wait for Search Engine
        run: |
          echo "Waiting for ${{ matrix.search-engine.name }} to start..."
          if [[ "${{ matrix.search-engine.name }}" == "elasticsearch" ]]; then
            until curl -s http://localhost:9200 | grep "tagline"; do
              sleep 5
            done
          else
            until curl -k -u admin:Koala\$193tree -s https://localhost:9200 | grep "cluster_name"; do
              sleep 5
            done
          fi
          echo "${{ matrix.search-engine.name }} is ready!"

      - name: Create .env file
        run: touch .env

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: curl, libxml, mbstring, zip, pcntl, gd
          tools: composer:v2
          coverage: xdebug

      - name: Install dependencies
        uses: nick-invision/retry@v1
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: composer update --${{ matrix.stability }} --prefer-dist --no-interaction --no-progress ${{ matrix.flags }}

      - name: Tests
        run: vendor/bin/phpunit -c phpunit.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: coverage.xml
          flags: ${{ matrix.search-engine.name }}
          name: ${{ matrix.search-engine.name }}-${{ matrix.search-engine.version }}
